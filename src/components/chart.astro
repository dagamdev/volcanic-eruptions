---
import { createChart } from 'lightweight-charts'
---

<div id="chart">
  
</div>

<script>
  import { createChart, ColorType } from 'lightweight-charts'
  import type { Eruption } from '../types'

  const container = document.getElementById('chart') ?? 'chart'
  const chart = createChart(container, {
    layout: {
      textColor: 'white',
      background: {
        type: ColorType.Solid,
        color: 'black'
      }
    }
  })
  const areaSeries = chart.addAreaSeries()
  
  try {
    const res = await fetch('/eruptions')
    const eruptions: Eruption[] = await res.json()
    const chartData: {time: string, value: number}[] = []

    for (const eruption of eruptions) {
      const time = `${eruption.StartDateYear}-06-15`
      const data = chartData.find(mp => mp.time === time)

      if (data) data.value++
      else chartData.push({time, value: 1})
    }

    chartData.sort((a,b) => {
      const aTime = new Date(a.time).getTime()
      const bTime = new Date(b.time).getTime()

      return aTime - bTime
    })

    for (let i=1; i<chartData.length; i++) {
      const cd = chartData[i]
      const firstYear = new Date(cd.time).getFullYear()
      const lastChartData = chartData[i-1]

      if (!lastChartData) continue

      const lastYear = new Date(lastChartData.time).getFullYear()
      const differenceInYears = firstYear - lastYear - 1

      if (!differenceInYears) continue

      const newData = []

      for (let i=1; i<=differenceInYears; i++) {
        newData.push({
          time: `${lastYear + i}-06-15`,
          value: 0
        })
      }
      chartData.splice(i, 0, ...newData)
    }

    console.log(chartData)

    areaSeries.setData(chartData)
    // areaSeries.setData([
    //   { time: '2018-02-22', value: 32.51 },
    //   { time: '2018-02-23', value: 31.11 },
    //   { time: '2018-02-24', value: 27.02 },
    //   { time: '2018-03-25', value: 27.32 },
    //   { time: '2018-03-26', value: 25.17 },
    //   { time: '2018-03-27', value: 28.89 },
    //   { time: '2018-04-28', value: 25.46 },
    //   { time: '2018-05-29', value: 23.92 },
    //   { time: '2018-05-30', value: 22.68 },
    //   { time: '2018-06-30', value: 22.67 },
    // ])

    chart.timeScale().fitContent();
    
  } catch (error) {
    console.error(error)
  }
</script>

<style>
  #chart {
    height: 400px;
  }
</style>
